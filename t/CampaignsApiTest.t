=begin comment

Elastic Email REST API

This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>

The version of the OpenAPI document: 4.0.0
Contact: support@elasticemail.com
Generated by: https://openapi-generator.tech

=end comment

=cut

#
# NOTE: This class is auto generated by OpenAPI Generator
# Please update the test cases below to test the API endpoints.
# Ref: https://openapi-generator.tech
#
use Test::More;
use Test::Exception;

use lib 'lib';
use strict;
use warnings;

use_ok('ElasticEmail::CampaignsApi');

my $api = ElasticEmail::CampaignsApi->new();
isa_ok($api, 'ElasticEmail::CampaignsApi');

#
# campaigns_by_name_delete test
#
# uncomment below and update the test
#my $campaigns_by_name_delete_name = undef; # replace NULL with a proper value
#my $campaigns_by_name_delete_result = $api->campaigns_by_name_delete(name => $campaigns_by_name_delete_name);

#
# campaigns_by_name_get test
#
# uncomment below and update the test
#my $campaigns_by_name_get_name = undef; # replace NULL with a proper value
#my $campaigns_by_name_get_result = $api->campaigns_by_name_get(name => $campaigns_by_name_get_name);

#
# campaigns_by_name_put test
#
# uncomment below and update the test
#my $campaigns_by_name_put_name = undef; # replace NULL with a proper value
#my $campaigns_by_name_put_campaign = undef; # replace NULL with a proper value
#my $campaigns_by_name_put_result = $api->campaigns_by_name_put(name => $campaigns_by_name_put_name, campaign => $campaigns_by_name_put_campaign);

#
# campaigns_get test
#
# uncomment below and update the test
#my $campaigns_get_search = undef; # replace NULL with a proper value
#my $campaigns_get_offset = undef; # replace NULL with a proper value
#my $campaigns_get_limit = undef; # replace NULL with a proper value
#my $campaigns_get_result = $api->campaigns_get(search => $campaigns_get_search, offset => $campaigns_get_offset, limit => $campaigns_get_limit);

#
# campaigns_post test
#
# uncomment below and update the test
#my $campaigns_post_campaign = undef; # replace NULL with a proper value
#my $campaigns_post_result = $api->campaigns_post(campaign => $campaigns_post_campaign);


done_testing();
